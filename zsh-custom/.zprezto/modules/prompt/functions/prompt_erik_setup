pmodload 'helper'

CURRENT_BG='NONE'
SEGMENT_SEPARATOR=''

function prompt_segment {
  local bg fg
  [[ -n $1 ]] && bg="%K{$1}" || bg="%k"
  [[ -n $2 ]] && fg="%F{$2}" || fg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]; then
    echo -n " %{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%} "
  else
    echo -n "%{$bg%}%{$fg%}"
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && print -Pn $3
}

function prompt_end {
  if [[ -n $CURRENT_BG ]]; then
    echo -n " %{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR"
  else
    echo -n "%{%k%}"
  fi
  echo -n "%{%f%}"
  CURRENT_BG=''
}

function prompt_erik_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_erik_pwd="$MATCH"
    unset MATCH
  else
    _prompt_erik_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  fi
}

function build_prompt {
  if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    prompt_segment red black '  %m'
  else
    prompt_segment black default '%m'
  fi

  prompt_segment blue black '${_prompt_erik_pwd}'
  if $git_status; then
    prompt_segment green black '${(e)git_info[prompt]}'
  fi
  prompt_end
}

function prompt_erik_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_erik_pwd

  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git_status=git-info
  fi
}

function prompt_erik_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_erik_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{white}%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{red}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{red}%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format ':%%B%F{black}%s%f'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{black}✚%f'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{black}⬆%f'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{black}⬇%f'
  zstyle ':prezto:module:git:info:branch' format ' %b'
  zstyle ':prezto:module:git:info:commit' format '%F{black}➦ %.7c%f'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{black}✖%f'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{black}✱%f'
  zstyle ':prezto:module:git:info:position' format '%F{black}%p%f'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{black}➜%f'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{black}✭%f'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{black}═%f'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{black}◼%f'
  zstyle ':prezto:module:git:info:keys' format \
    'prompt' '$(coalesce "%b" "%p" "%c")%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u'

  # Define prompts.
  PROMPT='$(build_prompt)${editor_info[keymap]} '
  RPROMPT=''
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_erik_setup "$@"
