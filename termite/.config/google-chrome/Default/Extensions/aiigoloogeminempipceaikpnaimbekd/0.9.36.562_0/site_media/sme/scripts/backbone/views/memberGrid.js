var MemberMenu=Backbone.View.extend({events:{"mouseleave":"handleOut","click a.editLink":"handleEditClick","click a.inviteLink":"handleInviteClick","click a.suspendLink":"handleSuspendClick","click a.revokeLink":"handleRevokeClick"},initialize:function(options){this.options=$.extend({},this.defaults,options);},render:function(){var status=this.model.get('status');var a=$('<a>').text('Edit membership').addClass('editLink');this.$el.append(a);if(status=='invited'){a=$('<a>').text('Invite Again').addClass('inviteLink');}
else if(status=='invite expired'){a=$('<a>').text('Re-invite').addClass('inviteLink');}
else{a=$('<a>').text('Invite').addClass('inviteLink');if(status!='not yet invited'){a.prop('disabled',true).addClass('disabled');}}
this.$el.append(a);a=$('<a>').text('Revoke membership ...').addClass('revokeLink');if(this.model.get('role')=="owner"||this.model.get('revoke_disabled')){a.prop('disabled',true).addClass('disabled');}
this.$el.append(a);return this;},handleOut:function(){},handleEditClick:function(e){this.options.grid.trigger('editRowClick',[this.model]);this.remove();},handleInviteClick:function(e){this.options.grid.trigger('inviteRowClick',[this.model]);this.remove();},handleSuspendClick:function(e){this.options.grid.trigger('suspendRowClick',[this.model]);this.remove();},handleRevokeClick:function(e){this.options.grid.trigger('revokeRowClick',[this.model]);this.remove();}});var MemberActionListCell=Backgrid.Cell.extend({events:{},initialize:function(options){MemberActionListCell.__super__.initialize.apply(this,arguments);this.options=$.extend({},this.defaults,options);},render:function(){this.$el.empty();this.$el.addClass('handleCell');var actionIcon=$("<span class='icomoon-icon icon-handle actionLink'></span>");_.bindAll(this,"handleActionOver","handleActionOut");this.$el.hoverIntent({over:this.handleActionOver,out:this.handleActionOut,timeout:300});this.$el.append(actionIcon);return this;},handleActionOver:function(e){this.trigger('actionOver');var menu;menu=this.options.menu=new MemberMenu({model:this.model,el:$('<div>').addClass('smeMemberRowMenu'),grid:this.column.attributes.grid});this.$el.append(menu.render().el);this.$el.addClass('menuOpen');},handleActionOut:function(e){this.options.menu.remove();this.$el.removeClass('menuOpen');}});var ActionsHeaderCell=Backgrid.HeaderCell.extend({initialize:function(){ActionsHeaderCell.__super__.initialize.apply(this,arguments);this.$el.addClass('actionsHeaderCell');}});var MemberCell=Backgrid.Cell.extend({initialize:function(){MemberCell.__super__.initialize.apply(this,arguments);this.listenTo(this.model,"change:first_name",this.render);this.listenTo(this.model,"change:last_name",this.render);this.listenTo(this.model,"change:email",this.render);},render:function(){var memberText='';if(this.model.get('first_name')||this.model.get('last_name')){if(this.model.get('first_name')){memberText+=this.model.get('first_name')+' ';}
memberText+=this.model.get('last_name');memberText+="<br/>";}
memberText+=this.model.get('email');this.$el.html(memberText).addClass('memberCell doubleLine string-cell');return this;}});var MemberGridView=Backbone.View.extend({defaults:{actionCellClass:MemberActionListCell,actionHeaderClass:ActionsHeaderCell,memberCellClass:MemberCell},events:{"click #addMemberBtn":"handleAddBtnClick"},initialize:function(options){this.options=$.extend({},this.defaults,options||{});defaultSortFunc=function(model,sortKey){return model.get(sortKey).toLowerCase();};var columns=[{name:"member",label:"Member",sortable:false,editable:false,cell:this.options.memberCellClass},{name:"roleDisplay",label:"Role",sortValue:defaultSortFunc,editable:false,cell:Backgrid.StringCell.extend({className:"roleCell string-cell"})},{name:"statusDisplay",label:"Status",sortValue:defaultSortFunc,editable:false,cell:Backgrid.StringCell.extend({className:"statusCell string-cell"})},{name:"actions",label:"Actions",editable:false,sortable:false,headerCell:this.options.actionHeaderClass,cell:this.options.actionCellClass,grid:this}];this.grid=new Backgrid.Grid({columns:columns,collection:this.collection});$('#memberGrid').append(this.grid.render().$el);this.collection.fetch({reset:true}).then(_.bind(this.handleGridLoad,this));},handleGridLoad:function(){this.grid.header.row.cells[1].$('a').click();lockifyUtils.hideLoadingCover();},handleAddBtnClick:function(e){this.trigger('addBtnClick');}});