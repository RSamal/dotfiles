sjclE.cbc={xorArrayInPlace:function(target,operand){for(var i=target.length-1;i>=0;i--){target[i]^=operand[i];}},StreamSegmenter:function(size,initialBuffer,output){var buffer=initialBuffer;return{writeData:function(input){for(var offset=size-buffer.length,block=buffer.concat(input.slice(0,offset));block.length===size;offset+=size,block=input.slice(offset-size,offset)){output.writeBlock(block);}
buffer=block;},close:function(){output.writeTail(buffer);}};},CBCWordStreamEncryptor:function(key,iv,output){var aes=new sjcl.cipher.aes(key),prevCipherBlock=iv,bufferedPlainBlock='';function writeFullBlock(plainBlock){sjclE.cbc.xorArrayInPlace(plainBlock,prevCipherBlock);prevCipherBlock=aes.encrypt(plainBlock);output.writeData(prevCipherBlock);}
return new sjclE.cbc.StreamSegmenter(4,[],{writeBlock:function(plainBlock){if(bufferedPlainBlock){writeFullBlock(bufferedPlainBlock);}
bufferedPlainBlock=plainBlock;},writeTail:function(tailBlock){var bufferedBytes,fromBits=sjcl.codec.bytes.fromBits,tailBlockBytes=fromBits(tailBlock);if(!tailBlockBytes.length&&(bufferedBytes=fromBits(bufferedPlainBlock)).length<16){tailBlockBytes=bufferedBytes;}
else if(bufferedPlainBlock){writeFullBlock(bufferedPlainBlock);}
var padByte=16-tailBlockBytes.length;while(tailBlockBytes.length<16){tailBlockBytes.push(padByte);}
writeFullBlock(sjcl.codec.bytes.toBits(tailBlockBytes));output.close();}});},CBCWordBlockDecryptor:function(key,iv,output){var aes=new sjcl.cipher.aes(key),prevCipherBlock=iv,lastPlainBlock=null;return{writeBlock:function(cipherBlock){if(lastPlainBlock!==null){output.writeData(lastPlainBlock);}
lastPlainBlock=aes.decrypt(cipherBlock);sjclE.cbc.xorArrayInPlace(lastPlainBlock,prevCipherBlock);prevCipherBlock=cipherBlock;},writeTail:function(partialCipherBlock){var padding,expandedBlock;if(partialCipherBlock.length||lastPlainBlock===null){throw'Decryption error';}
expandedBlock=sjcl.codec.bytes.fromBits(lastPlainBlock);padding=expandedBlock[15];if(padding<0||padding>16){throw'Decryption error';}
if(padding!==16){output.writeData(sjcl.codec.bytes.toBits(expandedBlock.slice(0,16-padding)));}
output.close();}};},OpenSSLWordStreamEncryptor:function(key,iv,output){output.writeData(iv);return new sjclE.cbc.CBCWordStreamEncryptor(key,iv,output);},OpenSSLByteStreamEncryptor:function(key,iv,output){var toBits=sjcl.codec.bytes.toBits,chain=new sjclE.cbc.OpenSSLWordStreamEncryptor(key,iv,output),BLOCK_SIZE=256;return new sjclE.cbc.StreamSegmenter(4*BLOCK_SIZE,[],{writeBlock:function(data){chain.writeData(toBits(data));},writeTail:function(data){chain.writeData(toBits(data));chain.close();}});},OpenSSLWordStreamDecryptor:function(key,output){return new sjclE.cbc.StreamSegmenter(4,[],{writeBlock:function(block){var decryptor=new sjclE.cbc.CBCWordBlockDecryptor(key,block,output);this.writeBlock=decryptor.writeBlock;this.writeTail=decryptor.writeTail;},writeTail:function(block){throw'Decryption error.';}});},Base64WithBreaksWordEncoder:function(output){return new sjclE.cbc.StreamSegmenter((64*6)/32,[],{writeBlock:function(block){output.writeData(sjcl.codec.base64.fromBits(block)+'\n');},writeTail:function(block){this.writeBlock(block);output.close();}});},Base64ByteDecoder:function(output){return new sjclE.cbc.StreamSegmenter(1024,'',{writeBlock:function(block){output.writeData(sjcl.codec.base64.toBits(block));},writeTail:function(block){output.writeData(sjcl.codec.base64.toBits(block));output.close();}});},Base64WithBreaksByteDecoder:function(output){var decoder=new sjclE.cbc.Base64ByteDecoder(output);return{writeData:function(data){decoder.writeData(data.replace(/[\r\n]/g,''));},close:function(){decoder.close();}};},ByteStringOutput:function(){var rarray=[];var result='';return{getResult:function(){if(rarray.length){result+=rarray.join('');}
return result;},writeData:function(arr){var bl=sjcl.bitArray.bitLength(arr),i,tmp;for(i=0;i<bl/8;i++){if((i&3)===0){tmp=arr[i/4];}
rarray.push(String.fromCharCode(tmp>>>24));if(rarray.length==512){result+=rarray.join('');rarray=[];}
tmp<<=8;}},close:function(){}};},StringOutput:function(){var result='';return{getResult:function(){return result;},writeData:function(data){result+=data;},close:function(){}};}};