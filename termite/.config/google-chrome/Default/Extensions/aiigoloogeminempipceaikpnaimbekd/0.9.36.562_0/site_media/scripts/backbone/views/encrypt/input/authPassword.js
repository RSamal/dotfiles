var AuthPasswordView=BaseEncryptInputView.extend({events:{"change #encrypt_pword":"handleChange","change #pwordConfirm":"handleConfirmChange","blur #encrypt_pword":"hideComplexityOnBlur","focus #unmaskPword":"handleUnmaskFocus"},initialize:function(){if($('#encrypt_pword').length){if(typeof $.fn.complexityGauge=='function'){$('#encrypt_pword').complexityGauge();}
if(typeof $.fn.matchTest=='function'){$('#pwordConfirm').matchTest({compareInputControl:$('#encrypt_pword'),msgAfterSelector:'label[for="pwordConfirm"]'});}}
this.$('.toggleMaskIcon').toggleMask({"inputs":$('#encrypt_pword, #pwordConfirm')});$(document).on("maskToggled","#pwordConfirm",this.handlePwordConfirmMaskToggle);_.bindAll(this,['reset']);$(document).bind('formReset',this.reset);this.model.bind("validationError",this.handleValidationError);},handlePwordConfirmMaskToggle:function(ev,newInput){newInput.matchTest({compareInputControl:$('#encrypt_pword'),msgAfterSelector:'label[for="pwordConfirm"]'});},handleChange:function(){this.model.set({password:$("#encrypt_pword").val()});},handleConfirmChange:function(){this.model.set({passwordConfirm:$("#pwordConfirm").val()});},hideComplexityOnBlur:function(){if($('#encrypt_pword').val()===''){$("#pwordStrength").children().hide();}},handleUnmaskFocus:function(){$('.pwordCaseMsg').stop();},reset:function(){if($('#unmaskPword').is(':checked')){$('#unmaskPword').prop('checked',false).triggerHandler('click');}
$("#pwordStrength").children().hide();$("#noMatchMessage,#partialMatchMessage,#totalMatchMessage").hide();$('#encrypt_pword').val('').trigger('change');$('#pwordConfirm').val('').trigger('change');},handleValidationError:function(type,msg){var elem=null;switch(type){case'authPassword':elem=$('#encrypt_pword').add('#pwordConfirm');break;case'authPasswordConfirm':elem=$('#pwordConfirm');break;}
if(elem){AuthPasswordView.__super__.appendError($("#authOptionPass_errors"),msg,elem);$('#encrypt_pword').parent().addClass('validationError');}}});