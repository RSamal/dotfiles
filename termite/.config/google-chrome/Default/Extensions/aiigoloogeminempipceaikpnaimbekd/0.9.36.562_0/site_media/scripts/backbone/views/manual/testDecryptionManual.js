var TestDecryptionManualView=Backbone.View.extend({initialize:function(){this.bind('showDecryptUI',this.showDecryptUI);},events:{"click #decrypt":"showDecryptUI","keyup #decrypt_input_plaintext":"handleKeypUpCutPaste","paste #decrypt_input_plaintext":"handleKeypUpCutPaste","cut   #decrypt_input_plaintext":"handleKeypUpCutPaste","input #decrypt_input_plaintext":"handleKeypUpCutPaste","keyup #decrypt_ciphertext":"handleKeyUp","click #decrypt .cryptReset":"handleResetClick","click #decryptTab":"handleResetClick","click #decryptButton":"handleManualDecrypt","click #decryptReset":"handleResetClick"},showDecryptUI:function(){$('#decrypt').show();$('#encrypt').hide();$('#setup').hide();$("#decryptTab").addClass("active");$("#setupTab").removeClass("active");$("#encryptTab").removeClass("active");},handleKeypUpCutPaste:function(e){if($('#decrypt_input_plaintext').val()===''){$("#decrypt2").show();$("#decrypt .sectionHeader:not(.stayVisible)").hide();$("#decrypt .stepContent:not(.stayVisible)").hide();$("#decryptDataContainer").hide();}else{$('#decrypt_command_plaintext').text($(e.target).val().replace(/\n/g,'\\n').replace(/'/g,"'\\''"));$("#decrypt2").hide();$("#decrypt .sectionHeader").show();$("#decrypt .stepContent").show();$("#decryptDataContainer").show();}},handleKeyUp:function(){if($('#decrypt_ciphertext').val()===''){$("#decryptButton").prop('disabled',true).addClass("disabled");}else{if(!$('#decrypt_ciphertext').is('[readonly]')){$("#decryptButton").prop('disabled',false).removeClass("disabled");}}},handleResetClick:function(){$(this).prev('span').removeClass("button-hover");$(this).hide();$("#decrypt_ciphertext").val('').attr('readonly',false);$("#decrypt_input_plaintext").val('').attr('readonly',false);$("#decrypt_command_plaintext").text('');$('#decrypt_passphrase').val('').attr('readonly',false);$('#decrypt_command_key').text('key goes here');$("#decrypt .section:not(.default) .sectionHeader").hide();$("#decrypt .section:not(.default) .stepContent").hide();$('.decryptOutputElement').addClass('hidden');$('#decryptDataContainer').hide();$('.stepInstruction').show();if(lockifyCryptoUtils.nativeCryptoAvailable()||Random.is_ready()){lockify.manuals.getRandomKey();}},handleManualDecrypt:function(){function gatherDecryptInputData(){return{'ciphertext':$('#decrypt_ciphertext').val().replace(/\s(?!\n)/g,'').replace('\n','\n\n'),'passphrase':$('#decrypt_passphrase').val()};}
var data=gatherDecryptInputData();$("#decrypt_ciphertext").attr('readonly',true);$("#decrypt_passphrase").attr('readonly',true);$("#decrypt_input_plaintext").attr('readonly',true);$("#decrypt .sectionHeader").show();$("#decrypt .stepContent").show();$('#decryptReset').show().removeClass("disabled").removeAttr("disabled");$("#decryptButton").addClass("disabled");try{if(lockify.sjclBridge.decrypt.hasHmac(data.ciphertext)){hmacMatches=lockify.sjclBridge.decrypt.confirmHmac(data.passphrase,data.ciphertext);if(hmacMatches){$('#hmac_output').text("Integrity check successful. HMAC disgest match.");}else{$('#hmac_output').text("Integrity check failed. HMAC digest mismatch.");}
data.ciphertext=data.ciphertext.substr(0,data.ciphertext.length-44);}else{$('#hmac_output').text("HMAC not present. You are using an old version of OpenSSL that doesn't support HMAC. You need version 1.0+ for your CLI to generate a HMAC.");}
lockify.sjclBridge.decrypt.decryptData(data.passphrase,256,data.ciphertext,function(message,filelist){$('.decryptOutputElement').removeClass('hidden');$('#plaintext_output').text(message);});}catch(err){$("#decrypt_ciphertext").attr('readonly',false);if(err=="Decryption error."){$("#decryptErrorDialog").dialog(dialogOptions);}else{alert(err);}
return;}}});