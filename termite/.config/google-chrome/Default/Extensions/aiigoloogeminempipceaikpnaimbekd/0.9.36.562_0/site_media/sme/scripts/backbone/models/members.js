var MemberModel=Backbone.Model.extend({save:function(){var returnedValue=MemberModel.__super__.save.apply(this,arguments);if(_.isBoolean(returnedValue)){return new $.Deferred().reject().promise();}
return returnedValue.then(_.bind(this.handleSaveResponse,this));},handleSaveResponse:function(resp,statusText,xhr){if(resp.success==false){this.validationError={fieldErrors:resp.fieldErrors};return new $.Deferred().reject().promise();}
return xhr;},url:function(){return"/sme/organization/"+this.get('orgid')+"/member/"+(this.get('id')||'');},initialize:function(options){var foo="bar";},formatRoleVal:function(str){switch(str){case'owner':return'Owner';case'manager':return'Manager';case'end-user':return'End-user';default:return str;}},mutators:{fullName:function(){var ret=this.get('last_name');if(this.get('last_name').length||this.get('first_name').length){ret+=', ';}
ret+=this.get('first_name');return ret;},roleDisplay:{get:function(){return this.formatRoleVal(this.get('role'));},set:function(key,value,options,set){set({'roleDisplay':this.formatRoleVal(value),'role':value});}},statusDisplay:function(){var str=this.get('status');return str.charAt(0).toUpperCase()+str.slice(1);}},validate:function(attrs,options){ret={formError:"",fieldErrors:[]};if(attrs.email.length==0){ret.fieldErrors.push({fieldName:"email",error:"Email is required."});}
else if(!lockifyUtils.isEmail(attrs.email)){ret.fieldErrors.push({fieldName:"email",error:"Email not in valid format, e.g. you@domain.com."});}
if($.inArray(attrs.role,["owner","manager"])!=-1){if(attrs.first_name.length==0){ret.fieldErrors.push({fieldName:"firstName",error:"First name is required when adding a "+this.get('roleDisplay')+"."});}
if(attrs.last_name.length==0){ret.fieldErrors.push({fieldName:"lastName",error:"Last name is required when adding a "+this.get('roleDisplay')+"."});}}
if(ret.fieldErrors.length==0){ret=null;}
return ret;}});var MemberCollection=Backbone.Collection.extend({model:MemberModel});