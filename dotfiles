#!/usr/bin/env ruby
# vim: set filetype=ruby

# TODO: jslint
#       setup linux to install dependencies

require 'rubygems'
require 'bundler/setup'
require "thor"

class DotfilesCLI < Thor
  include Thor::Actions

  desc "install", "Creates symlinks in home directory"
  def install
    # install dependencies (mac only, TODO: unix)
    Bundler.with_clean_env do
      case RUBY_PLATFORM
      when /linux/              
      when /darwin/
        `brew install go zsh cscope ctags bazaar git git-extras hub lua luajit mercurial tmux the_silver_searcher zsh-lovers rbenv ruby-build rbenv-binstubs rbenv-gem-rehash cmake autoconf ack automake openssl ssh-copy-id watch`
        `brew install macvim --with-cscope --with-lua --with-luajit --with-python --override-system-vim --HEAD`
        `brew linkapps macvim`
      end
    end

    # Set login shell to zsh
    Bundler.with_clean_env do
      `chsh -s /bin/zsh`
    end

    # setup Go plugins for vim
    empty_directory "~/.vim_bundle"

    # install zsh / zprezto
    create_link "~/.zprezto", File.join(__dir__, "vendor/deps/prezto")
    Dir['.z*'].each {|p| create_link "~/#{p}", File.join(__dir__, p) }

    # vim symlinks
    create_link "~/.vim", File.join(__dir__, ".vim")
    create_link "~/.vimrc", File.join(__dir__, ".vim/vimrc")
    create_link "~/.gvimrc", File.join(__dir__, ".vim/gvimrc")

    # git symlinks
    create_link "~/.gitignore", File.join(__dir__, ".gitignore")
    create_link "~/.gitconfig", File.join(__dir__, ".gitconfig")

    # misc symlinks
    create_link "~/.agignore", File.join(__dir__, ".agignore")
    create_link "~/.ctags", File.join(__dir__, ".ctags")
    create_link "~/.tmux.conf", File.join(__dir__, ".tmux.conf")
    create_link "~/.gemrc", File.join(__dir__, ".gemrc")
    create_link "~/.rbenv/default-gems", File.join(__dir__, ".rbenv/default-gems")
    create_link "~/.ztheme", File.join(__dir__, "vendor/deps/base16-shell/base16-default.dark.sh")
  end

  desc "uninstall", "Removes symlinks in home directory"
  def uninstall
    say "uninstalling"
    `rm ~/.zprezto`
    `rm ~/.zpreztorc`
    `rm ~/.zshrc`
    `rm ~/.zlogin`
    `rm ~/.zlogout`
    `rm ~/.zprofile`
    `rm ~/.ztheme`
    `rm -rf ~/.vim`
    `rm ~/.vimrc`
    `rm ~/.gvimrc`
    `rm ~/.gitconfig`
    `rm ~/.gitignore`
    `rm ~/.aginore`
    `rm ~/.ctags`
    `rm ~/.tmux.conf`
    `rm ~/.gemrc`
    `rm -rf ~/.rbenv`
  end

  desc "update", "Updates dependencies"
  def update
    Bundler.with_clean_env do
      say "updating neobundle"
      `cd .vim/bundle/neobundle.vim && git pull origin master`

      say "updating prezto"
      `cd vendor/deps/prezto && git checkout master && git pull origin master && git submodule update --init --recursive`

      say "updating base16-iterm2"
      `cd vendor/deps/base16-iterm2.git && git checkout master && git pull origin master`
    end
  end

  private
  def go_root
    return @go_root if @go_root
    Bundler.with_clean_env do
      go_bin = `which go`.gsub("\n", "")

      if go_bin.empty?
        puts "Could not find the location of Go"
        return
      end

      puts "#{go_bin} env GOROOT"
      @go_root = `#{go_bin} env GOROOT`.gsub("\n", "")
      return @go_root
    end
  end
end

DotfilesCLI.start(ARGV)
